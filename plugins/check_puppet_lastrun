#!/usr/bin/perl

# Copyright (c) 2013 Jason Hancock <jsnbyh@gmail.com>
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is furnished
# to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.
#
# This file is part of the nagios-puppet bundle that can be found
# at https://github.com/jasonhancock/nagios-puppet
#
# This plugin parses puppets last_run_summary.yaml file and complains if the last
# run was too long ago or if the last run failed for some reason

use strict;
use warnings;
use YAML::Syck;
use Nagios::Plugin;
use Nagios::Plugin::Threshold;

my $np = Nagios::Plugin->new(
    usage     => "Usage: %s [-c|--critical=<threshold> ] [ -w|--warning=<threshold> ] "
        . "[-f|--file=<path_to_file> ] [ -n|--numlines=<number_of_lines> ] ",
    shortname => 'Puppet Last Run',
);

$np->add_arg(
    spec => 'warning|w=s',
    help => '-w, --warning=Seconds'
);

$np->add_arg(
    spec => 'critical|c=s',
    help => '-c, --critical=Seconds'
);

$np->add_arg(
    spec    => 'file|f=s',
    help    => '-f, --file=Path to last_run_summary.yaml. Defaults to /var/lib/puppet/state/last_run_summary.yaml',
    default => '/var/lib/puppet/state/last_run_summary.yaml'
);

$np->getopts;

unless ( defined $np->opts->warning || defined $np->opts->critical ) {
    $np->nagios_die( " you didn't supply a threshold argument " );
}

$np->nagios_exit('UNKNOWN', "File doesn't exist or not readable " .
    $np->opts->file) unless (-r $np->opts->file);

my $data = LoadFile($np->opts->file);
my $delta = time() -  $data->{'time'}{'last_run'};

my $time_status = $np->check_threshold(
    check    => $delta,
    warning  => $np->opts->warning,
    critical => $np->opts->critical
);

my $puppet_status = 'UNCHANGED';
$puppet_status = 'CHANGED' if($data->{'changes'}{'total'} > 0);
$puppet_status = 'FAILED'  if($data->{'events'}{'failure'} > 0);

my $msg = "Last puppet run $delta seconds ago ($puppet_status)";

if($time_status > 0) {
    $np->nagios_exit($time_status, $msg);
}

$np->nagios_exit($puppet_status eq  'FAILED' ? 'CRITICAL' : 'OK', $msg);
